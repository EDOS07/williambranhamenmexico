"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-stately+toast@3.0.0-beta.7_react@19.1.0";
exports.ids = ["vendor-chunks/@react-stately+toast@3.0.0-beta.7_react@19.1.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@react-stately+toast@3.0.0-beta.7_react@19.1.0/node_modules/@react-stately/toast/dist/useToastState.mjs":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-stately+toast@3.0.0-beta.7_react@19.1.0/node_modules/@react-stately/toast/dist/useToastState.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToastQueue: () => (/* binding */ $77b352cf12efcf73$export$f1f8569633bbbec4),\n/* harmony export */   useToastQueue: () => (/* binding */ $77b352cf12efcf73$export$84726ef35ca2129a),\n/* harmony export */   useToastState: () => (/* binding */ $77b352cf12efcf73$export$c7b26b20d3ced9c5)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.2.4_@babel+core@7.2_16ce3abb760b473ba98db4731cd0a223/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! use-sync-external-store/shim/index.js */ \"(ssr)/./node_modules/.pnpm/use-sync-external-store@1.5.0_react@19.1.0/node_modules/use-sync-external-store/shim/index.js\");\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nfunction $77b352cf12efcf73$export$c7b26b20d3ced9c5(props = {}) {\n    let { maxVisibleToasts: maxVisibleToasts = 1, hasExitAnimation: hasExitAnimation = false } = props;\n    let queue = (0, react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>new $77b352cf12efcf73$export$f1f8569633bbbec4({\n            maxVisibleToasts: maxVisibleToasts,\n            hasExitAnimation: hasExitAnimation\n        }), [\n        maxVisibleToasts,\n        hasExitAnimation\n    ]);\n    return $77b352cf12efcf73$export$84726ef35ca2129a(queue);\n}\nfunction $77b352cf12efcf73$export$84726ef35ca2129a(queue) {\n    let subscribe = (0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((fn)=>queue.subscribe(fn), [\n        queue\n    ]);\n    let getSnapshot = (0, react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>queue.visibleToasts, [\n        queue\n    ]);\n    let visibleToasts = (0, use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);\n    return {\n        visibleToasts: visibleToasts,\n        add: (content, options)=>queue.add(content, options),\n        close: (key)=>queue.close(key),\n        remove: (key)=>queue.remove(key),\n        pauseAll: ()=>queue.pauseAll(),\n        resumeAll: ()=>queue.resumeAll()\n    };\n}\nclass $77b352cf12efcf73$export$f1f8569633bbbec4 {\n    /** Subscribes to updates to the visible toasts. */ subscribe(fn) {\n        this.subscriptions.add(fn);\n        return ()=>this.subscriptions.delete(fn);\n    }\n    /** Adds a new toast to the queue. */ add(content, options = {}) {\n        let toastKey = Math.random().toString(36);\n        let toast = {\n            ...options,\n            content: content,\n            key: toastKey,\n            timer: options.timeout ? new $77b352cf12efcf73$var$Timer(()=>this.close(toastKey), options.timeout) : undefined\n        };\n        let low = 0;\n        let high = this.queue.length;\n        while(low < high){\n            let mid = Math.floor((low + high) / 2);\n            if ((toast.priority || 0) > (this.queue[mid].priority || 0)) high = mid;\n            else low = mid + 1;\n        }\n        this.queue.splice(low, 0, toast);\n        toast.animation = low < this.maxVisibleToasts ? 'entering' : 'queued';\n        let i = this.maxVisibleToasts;\n        while(i < this.queue.length)this.queue[i++].animation = 'queued';\n        this.updateVisibleToasts({\n            action: 'add'\n        });\n        return toastKey;\n    }\n    /**\n   * Closes a toast. If `hasExitAnimation` is true, the toast\n   * transitions to an \"exiting\" state instead of being removed immediately.\n   */ close(key) {\n        let index = this.queue.findIndex((t)=>t.key === key);\n        if (index >= 0) {\n            var _this_queue_index_onClose, _this_queue_index;\n            (_this_queue_index_onClose = (_this_queue_index = this.queue[index]).onClose) === null || _this_queue_index_onClose === void 0 ? void 0 : _this_queue_index_onClose.call(_this_queue_index);\n            this.queue.splice(index, 1);\n        }\n        this.updateVisibleToasts({\n            action: 'close',\n            key: key\n        });\n    }\n    /** Removes a toast from the visible toasts after an exiting animation. */ remove(key) {\n        this.updateVisibleToasts({\n            action: 'remove',\n            key: key\n        });\n    }\n    updateVisibleToasts(options) {\n        let { action: action, key: key } = options;\n        let toasts = this.queue.slice(0, this.maxVisibleToasts);\n        if (action === 'add' && this.hasExitAnimation) {\n            let prevToasts = this.visibleToasts.filter((t)=>!toasts.some((t2)=>t.key === t2.key)).map((t)=>({\n                    ...t,\n                    animation: 'exiting'\n                }));\n            this.visibleToasts = prevToasts.concat(toasts).sort((a, b)=>{\n                var _b_priority, _a_priority;\n                return ((_b_priority = b.priority) !== null && _b_priority !== void 0 ? _b_priority : 0) - ((_a_priority = a.priority) !== null && _a_priority !== void 0 ? _a_priority : 0);\n            });\n        } else if (action === 'close' && this.hasExitAnimation) // Cause a rerender to happen for exit animation\n        this.visibleToasts = this.visibleToasts.map((t)=>{\n            if (t.key !== key) return t;\n            else return {\n                ...t,\n                animation: 'exiting'\n            };\n        });\n        else this.visibleToasts = toasts;\n        for (let fn of this.subscriptions)fn();\n    }\n    /** Pauses the timers for all visible toasts. */ pauseAll() {\n        for (let toast of this.visibleToasts)if (toast.timer) toast.timer.pause();\n    }\n    /** Resumes the timers for all visible toasts. */ resumeAll() {\n        for (let toast of this.visibleToasts)if (toast.timer) toast.timer.resume();\n    }\n    constructor(options){\n        this.queue = [];\n        this.subscriptions = new Set();\n        /** The currently visible toasts. */ this.visibleToasts = [];\n        var _options_maxVisibleToasts;\n        this.maxVisibleToasts = (_options_maxVisibleToasts = options === null || options === void 0 ? void 0 : options.maxVisibleToasts) !== null && _options_maxVisibleToasts !== void 0 ? _options_maxVisibleToasts : 1;\n        var _options_hasExitAnimation;\n        this.hasExitAnimation = (_options_hasExitAnimation = options === null || options === void 0 ? void 0 : options.hasExitAnimation) !== null && _options_hasExitAnimation !== void 0 ? _options_hasExitAnimation : false;\n    }\n}\nclass $77b352cf12efcf73$var$Timer {\n    reset(delay) {\n        this.remaining = delay;\n        this.resume();\n    }\n    pause() {\n        if (this.timerId == null) return;\n        clearTimeout(this.timerId);\n        this.timerId = null;\n        this.remaining -= Date.now() - this.startTime;\n    }\n    resume() {\n        if (this.remaining <= 0) return;\n        this.startTime = Date.now();\n        this.timerId = setTimeout(()=>{\n            this.timerId = null;\n            this.remaining = 0;\n            this.callback();\n        }, this.remaining);\n    }\n    constructor(callback, delay){\n        this.startTime = null;\n        this.remaining = delay;\n        this.callback = callback;\n    }\n}\n\n\n\n//# sourceMappingURL=useToastState.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-stately+toast@3.0.0-beta.7_react@19.1.0/node_modules/@react-stately/toast/dist/useToastState.mjs\n");

/***/ })

};
;